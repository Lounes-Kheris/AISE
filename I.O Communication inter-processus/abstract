**************IO PROCESSUS ET OPC SYSTEM********************

1- I/O POSIX

***-*** DESCRIPTEUR DE FICHIER "BAS NIVEAU" ***-***
Ça permet d'ouvrir un fichier(droit, lire, ecrire);

*Les descripteur de fichiers
-Stdin(0) : entrée standard : STDIN_FILENO
-Stdout(0): sortie standard : STOUT_FILENO
-Stderr(0): sortie d'erreur standard : STERR_FILENO

*CRÉER UN DESCRIPTEUR :
-open -> fichier
-pipe -> flux
-socket ->connexion reseau



READ :
------
     -*EOF : la fin du fichier : renvoie 0
     -*>0  : renvoie la valeure qui restait ou celle qu'on a demandé jusqu'à size,Ça pourait étre moin que size d'où l'interet de récupérer la valeure de retour read sinon on ne sarait pas combien q'uon a lu valide
     -*<0  : Sot :
     	   **errno = EINTR : on a été interrompu
	   **errno = EAGAIN: on a mit le descripteur de fichier en non bloquant O_NONBLOCK


write :
-------
      -* >0 : N bytes ont été ecrit et peut etre moin que SIZE
      -* <0 ! erreur
      	 --* errno == EINTR : interrompu par un signal 
	 --* errno == EAGAIN : fd O_NONBLOCK

seek : lseek(fd, offset, whence)
------
offset : c'est le décalage : à quelle offset on est ! "000000070"

whence : 
-* SEEK_SET : ca permet de dire d'aller directement à un certain octet
-* SEEK_CUR : ON ADDITION L'OFFSET À L'OFFSET COURANT
-* SEEK_END: l'offset de fin + paramétre offset


Apend : O_APPEND :
------------------
le fichier est ouvert en mode ajout, l'offset du fichier est positionné à la fin, comme si il a fait appel à lseek.



************** descripteur de fichier FILE* *******************

fopen : 
fclose: 
fread :
fwrite:
fgets :
ftell :
fseek :
feof  :
dileno:
fdopen:



*************** Redirection de Flux ***********************

dup2(out, STDOUT_FILENO) : je remplace la sortie standard par le descriipteru de fichier out, dup va d'abord fermer stdout et personne peut ecrire sur stdout 


**** Pipe ****
     ----

pp[1] ===> write
pp[0] ===> read


**************** IPC SYSTEM V ***********************

1 -**- files de messages :
       -------------------
permet d'envoyer des message d'un processus A vers un process B

2 -**- Segment de mémoire partagée :
       -----------------------------
C'est comme une fenetre en mémoire, on peut avoir deux processus A et B qui paratage une zone mémoire donné qu'on appel ça un "Segment SHM", 
c'est intéressant d'avoir une fenetre comme ca, au lieu de passer par le réseau ou un fichier, on peut ecrire dans cette zone, 
et les deux processus soient au courant du contenu de cette zone sans faire de copie.

3 -**- Sémaphore : c'est une primitive de synchronisation, c'est pour paratagé une ressource, 


****Lister les ressources IPC créees sur une machine *******
$> ipcs

**** créer un sémaphore ****
$> ipcmk -S

-ILs sont gérés au niveau de l'OS, l'idée c'est que plusieurs processus peuvent s y rattacher partageant 
uniquement une clé et c'est le role de "iftok" de créer cette clée


****--- Clefs IPC SYSTEL V ---****
	------------------
Le systéme de partage repose sur les clefs : 

- est un entier connu par les processus

